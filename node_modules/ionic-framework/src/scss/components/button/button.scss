
// Button Variables
// --------------------------------------------------

$button-font-size:                1.6rem !default;
$button-margin:                   0.4rem 0.2rem !default;
$button-padding:                  0 1em !default;
$button-height:                   2.8em !default;
$button-border-radius:            4px !default;

$button-round-padding:            0 2.6rem !default;
$button-round-border-radius:      64px !default;

$button-color:                    color(primary) !default;
$button-color-activated:          darken-or-lighten($button-color) !default;
$button-text-color:               inverse($button-color) !default;
$button-hover-opacity:            0.8 !default;


// Default Button
// --------------------------------------------------

button,
[button] {
  position: relative;
  display: inline-flex;
  flex-shrink: 0;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;

  will-change: background-color, opacity;
  transition: background-color, opacity 100ms linear;

  margin: $button-margin;
  padding: $button-padding;
  min-height: $button-height;
  line-height: 1;

  border: 1px solid #ccc;
  border: transparent;
  border-radius: $button-border-radius;

  font-size: $button-font-size;
  font-family: inherit;
  font-variant: inherit;
  font-style: inherit;

  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;

  text-align: center;
  text-transform: none;

  vertical-align: top; // the better option for most scenarios
  vertical-align: -webkit-baseline-middle; // the best for those that support it

  cursor: pointer;
  @include user-select-none();
  @include appearance(none);

  background: $button-color;
  color: $button-text-color;

  &:hover:not(.disable-hover) {
    opacity: $button-hover-opacity;
    text-decoration: none;
  }

  &.activated {
    opacity: 1;
    background-color: $button-color-activated;
  }


  // Button Types
  // --------------------------------------------------

  &[block] {
    display: flex;
    clear: both;
    margin-right: 0;
    margin-left: 0;
    width: 100%;

    &:after {
      clear: both;
    }
  }

  &[full] {
    width: 100%;
    margin-right: 0;
    margin-left: 0;
    border-radius: 0;
    border-right-width: 0;
    border-left-width: 0;

    &[outline] {
      border-radius: 0;
      border-right-width: 0;
      border-left-width: 0;
    }
  }

  &[round] {
    border-radius: $button-round-border-radius;
    padding: $button-round-padding;
  }

  &[disabled] {
    opacity: 0.4;
    cursor: default !important;
    pointer-events: none;
  }

}

a[button] {
  text-decoration: none;
}

[padding] > button[block]:first-child,
[padding] > [button][block]:first-child {
  margin-top: 0;
}


// Default Button Color Mixin
// --------------------------------------------------

@mixin button-default($bg-color, $bg-color-activated, $text-color) {
  background-color: $bg-color;
  color: $text-color;

  &.activated {
    background-color: $bg-color-activated;
  }
}


// Generate Default Button Colors
// --------------------------------------------------

@each $color, $value in $colors {

  button[#{$color}],
  [button][#{$color}] {

    $bg-color: $value;
    $bg-color-activated: darken-or-lighten($bg-color);
    $text-color: inverse($bg-color);
    @include button-default($bg-color, $bg-color-activated, $text-color);

  }

}
